Merhaba arkadaşlar bu dersimizde NESNE TABANLI PROGRAMLAMA-OOP(OBJECT ORİENTED PROGRAMMİNG) işleyeceğiz sizler için hazırladığım bu döküman örnekler üzerinden konuyu detaylı 
bir şekilde sizlere anlatmaya çalıştım umarım beğenirsiniz.

class Parrot:
    #class attribute
    species = "bird"
    
    def __init__(self,name,age):
        self.name = name
        self.age = age
        
blu = Parrot("Blu",10)
woo = Parrot("Woo",15)

#print("Blu is a {}".format(blu.__class__.species))
#print("Woo is also a {}".format(woo.__class__.species))

#print("{} is {} years old.".format(blu.name,blu.age))
#print("{} is {} years old.".format(woo.name,woo.age))

class Parrot1:
    
    def __init__(self,name,age):
        self.name = name
        self.age = age
    
    # instance method
    def sing(self,song):
        return "{} sings {}".format(self.name,song)
    
    def dance(self):
        return "{} is now dancing".format(self.name)
    
#instantiate the object
#blu1 = Parrot1("mavi",10)

#call out instance method
#print(blu1.sing("Happy"))
#print(blu1.dance())

#parent class
class Bird:
    
    def __init__(self):
        print("Bird is ready.")
        
    def whoisThis(self):
        print("Bird")
    
    def swim(self):
        print("Swim faster")
        
#child class
class Penguin(Bird):
    
    def __init__(self):
        #super() fonksiyonunu çağırırız
        super().__init__()
        print("Penguin is ready")
        
    def whoisThis(self):
        print("Penguin")
        
    def run(self):
        print("Run Faster")
        
#peggy = Penguin()
#peggy.whoisThis()
#peggy.swim()
#peggy.run()

class Computer:
    
    def __init__(self):
        self.__maxprice = 900
    
    def sell(self):
        print("Selling Price: {}".format(self.__maxprice))
    
    def setMaxPrice(self,price):
        self.__maxprice = price
"""        
c = Computer()
c.sell()

#fiyatı değiştirelim
c.__maxprice = 1000
c.sell()

#şimdi diğer kendi yarattığımız method üzerinden değişelim
c.setMaxPrice(1000)
c.sell()
"""

#Polimorfizm

class Parrot:
    
    def fly(self):
        print("Parrot can fly")
        
    def swim(self):
        print("Parrot can't swim")
        
class Penguin():
    
    def fly(self):
        print("Penguin can't swim")
    
    def swim(self):
        print("Penguin can swim")
        
# iki farklı classı şimdi kıyasalmak veya kullanmak için kullanıcağımız bir fonksiyon yazarız
def flying_test(bird):
    bird.fly()
    
#blu = Parrot()
#peggy = Penguin()

#flying_test(blu)
#flying_test(peggy)

#Python'da sınıf tanımlama 

class Person:
    "This is a person class"
    age = 10
    
    def greet(self):
        print("Hello")
        
#print(Person.age)
#print(Person.greet)
#print(Person.__doc__) #classın ne olduğunu anlatır bi sonraki satırda ne yazarsak onu verir

#Python'da bir nesne oluşturma

#harry = Person()
#print(Person.greet)
#print(harry.greet)
#harry.greet()

"Python'da Kalıtım"


class Polygon:
    def __init__(self, no_of_sides):
        self.n = no_of_sides
        self.sides = [0 for i in range(no_of_sides)]

    def inputSides(self):
        self.sides = [float(input("Enter side "+str(i+1)+" : ")) for i in range(self.n)]

    def dispSides(self):
        for i in range(self.n):
            print("Side",i+1,"is",self.sides[i])
            
class Triangle(Polygon):
    def __init__(self):
        Polygon.__init__(self,3)

    def findArea(self):
        a, b, c = self.sides
        # calculate the semi-perimeter
        s = (a + b + c) / 2
        area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
        print('The area of the triangle is %0.2f' %area)

#t = Triangle()
#t.inputSides()
#t.dispSides()
#t.findArea()

"Python Çoklu kalıtım"

class grandfather:
    pass
class grandmother:
    pass
class grandchild(grandfather,grandmother):
    pass

# bu bir çoklu kalıtımdır

"Python çok düzeyli kalıtım."

class grandfather1:
    pass
class Father(grandfather1):
    pass
class kid(Father):
    pass
    
#bu da çok düzeyli bir kalıtımdır.

"Python Yöntem Çözüm Sırası"

class Point:
    def __init__(self,x=0,y=0):
        self.x = x
        self.y = y

#p1 = Point(1,2)
#p2 = Point(2,4)
#print(p1+p2)

"Buraya tekrar dönüş yapıcaz..."

"Python özel işlevleri..."

"""

p1+p2 = p1.__add__(p2)
p1-p2 = p1.__sub__(p2)
p1*p2 = p1.__mul__(p2)
p1**p2 = p1.__pow__(p2)
p1/p2 = p1.__truediv__(p2)
p1//p2 = p1.__floordiv__(p2)
p1%p2 = p1.__mod__(p2)
p1<<p2 = p1.__lshift__(p2)
p1>>p2 = p1.__rshift__(p2)
p1 | p2 = p1.__and__(p2)
p1.__or__(p2)


"""

Burada dersimizin sonuna gelmiş bulunuyoruz bir sonra ki dersimizde görüşmek üzere kendinize iyi bakın iyi günler dilerim (:(:
